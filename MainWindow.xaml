<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Proiect_Medii"
        xmlns:VestigeSalon="clr-namespace:VestigeSalon;assembly=VestigeSalon" x:Class="Proiect_Medii.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="clientViewSource" d:DesignSource="{d:DesignInstance {x:Type VestigeSalon:Client}, CreateList=True}"/>
        <CollectionViewSource x:Key="hairstylistViewSource" d:DesignSource="{d:DesignInstance {x:Type VestigeSalon:Hairstylist}, CreateList=True}"/>
        <CollectionViewSource x:Key="clientProgramaresViewSource" Source="{Binding Programares, Source={StaticResource clientViewSource}}"/>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <TabControl x:Name="tabCtrlSalon" HorizontalAlignment="Left" Height="334" Margin="180,47,0,0" VerticalAlignment="Top" Width="583">
            <TabItem Header="Clients">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource clientViewSource}" Margin="0,0,0.2,0.4">
                    <DataGrid x:Name="clientDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="137,10,132.6,175" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="IdClientColumn" Binding="{Binding IdClient}" Header="IdClient" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="NumeCColumn" Binding="{Binding Nume}" Header="Nume" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="PrenumeCColumn" Binding="{Binding Prenume}" Header="Prenume" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="TelefonColumn" Binding="{Binding Telefon}" Header="Telefon" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid1" HorizontalAlignment="Left" Margin="137,190,0,0" VerticalAlignment="Top" Width="308">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="32"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="IdClient:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="IdClientTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding IdClient, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False"/>
                        <Label Content="Nume:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="NumeTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding Nume, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                        <Label Content="Prenume:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="PrenumeTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding Prenume, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                    </Grid>
                    <Button x:Name="btnPrevious" Content="Previous" HorizontalAlignment="Left" Margin="137,136,0,0" VerticalAlignment="Top" Width="75" Click="btnPrevious_Click"/>
                    <Button x:Name="btnNext" Content="Next" HorizontalAlignment="Left" Margin="370,136,0,0" VerticalAlignment="Top" Width="75" Click="btnNext_Click"/>
                </Grid>
            </TabItem>
            <TabItem Header="Hairstylist">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource hairstylistViewSource}">
                    <DataGrid x:Name="hairstylistDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="137,10,132.6,175" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="IdHairstylistCColumn" Binding="{Binding IdHairstylist}" Header="IdHairstylist" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="NumeHCColumn" Binding="{Binding NumeH}" Header="NumeH" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="PrenumeHCColumn" Binding="{Binding PrenumeH}" Header="PrenumeH" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="ExperientaCColumn" Binding="{Binding Experienta}" Header="Experienta" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button x:Name="btnPrevious1" Content="Previous" HorizontalAlignment="Left" Margin="137,136,0,0" VerticalAlignment="Top" Width="75" Click="btnPrevious1_Click"/>
                    <Button x:Name="btnNext1" Content="Next" HorizontalAlignment="Left" Margin="370,136,0,0" VerticalAlignment="Top" Width="75" Click="btnNext1_Click"/>
                    <Grid x:Name="grid2" HorizontalAlignment="Left" Margin="137,190,0,0" VerticalAlignment="Top" Width="308">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="IdHairstylist:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="IdHairstylistTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding IdHairstylist, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False"/>
                        <Label Content="NumeH:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="NumeHTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding NumeH, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="PrenumeH:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="PrenumeHTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="NumeH" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Experienta:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="ExperientaTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding Experienta, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Programares">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource clientProgramaresViewSource}">
                    <ComboBox x:Name="cmbClients" HorizontalAlignment="Left" Margin="110,59,0,0" VerticalAlignment="Top" Width="120" SelectedValue="{Binding ElementName=programaresDataGrid,Path=SelectedItem.IdClient,Mode=OneWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="Nume"/>
                                            <Binding Path="Prenume"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox x:Name="cmbHairstylist" HorizontalAlignment="Left" Margin="347,59,0,0" VerticalAlignment="Top" Width="120" SelectedValue="{Binding ElementName=programaresDataGrid,Path=SelectedItem.IdHairstylist,Mode=OneWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding Path="Experienta"/>
                                            <Binding Path="NumeH"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Label Content="Clients" HorizontalAlignment="Left" Margin="110,28,0,0" VerticalAlignment="Top" Width="120"/>
                    <Label Content="Hairstylist" HorizontalAlignment="Left" Margin="347,33,0,0" VerticalAlignment="Top" Width="120"/>
                    <DataGrid x:Name="programaresDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="36,122,40.6,70.4" RowDetailsVisibilityMode="VisibleWhenSelected"  IsSynchronizedWithCurrentItem="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="NumeColumn" Binding="{Binding Nume}" Header="Nume" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="PrenumeColumn" Binding="{Binding Prenume}" Header="Prenume" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="ExperientaColumn" Binding="{Binding Experienta}" Header="Experienta" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="NumeHColumn" Binding="{Binding NumeH}" Header="NumeH" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
        </TabControl>
        <GroupBox x:Name="gbOperations"  Button.Click="gbOperations_Click" Header="" HorizontalAlignment="Left" Height="91" Margin="34,94,0,0" VerticalAlignment="Top" Width="123">
            <StackPanel x:Name="spOperations">
                <Button x:Name="btnNew" Content="New" HorizontalAlignment="Left"  VerticalAlignment="Top" Width="75" Click="btnNew_Click" Background="BlanchedAlmond"/>
                <Button x:Name="btnEdit" Content="Edit" HorizontalAlignment="Left"  VerticalAlignment="Top" Width="75" Click="btnEdit_Click" Background="BlanchedAlmond" />
                <Button x:Name="btnDelete" Content="Delete" HorizontalAlignment="Left"  VerticalAlignment="Top" Width="75" Click="btnDelete_Click" Background="BlanchedAlmond" />
            </StackPanel>
        </GroupBox>
        <GroupBox x:Name="gbActions" Header="" HorizontalAlignment="Left" Height="78" Margin="34,270,0,0" VerticalAlignment="Top" Width="100">
            <StackPanel HorizontalAlignment="Left" Height="48"  VerticalAlignment="Top" Width="80">
                <Button x:Name="btnSave" Content="Save" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Click="btnSave_Click" Background="BlanchedAlmond">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="IsEnabled" Value="false" />
                            <Style.Triggers>
                                <!--Butonul Save va fi inactiv daca exista erori de validare -->
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=PrenumeTextBox, Path=(Validation.HasError)}" Value="false" />
                                        <Condition Binding="{Binding ElementName=NumeTextBox, Path=(Validation.HasError)}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="true" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="btnCancel" Content="Cancel" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Click="btnCancel_Click" Background="BlanchedAlmond"/>
            </StackPanel>
        </GroupBox>

    </Grid>
</Window>